//https://leetcode.com/problems/wildcard-matching/  
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define f(i,a,b) for(ll (i)=(a);(i)<(b);(i)++)
int main(){

string s,k;
cin>>s>>k;
ll a1=s.length();
ll a2=k.length();
bool dp[s.length()+1][k.length()+1];
// f(j,0,k.length()+1){
// f(i,0,s.length()+1){
// dp[i][j]=0;
// }}

dp[0][0]=1;
for(ll i=1;i<=a1;i++){
    dp[i][0]=0;
}
for(ll j=1;j<=a2;j++){
    if(k[j-1]=='*'&&dp[0][j-1]==1){
        dp[0][j]=1;
    }
    else{
        dp[0][j]=0;
    }
}


for(ll i=1;i<=a1;i++){
    for(ll j=1;j<=a2;j++){
        if(s[i-1]==k[j-1]){
            dp[i][j]=dp[i-1][j-1];
        }
        else{
            if(k[j-1]=='*'){
                dp[i][j]=dp[i][j-1]|dp[i-1][j]|dp[i-1][j-1];
               // cout<<" as "<<s[i-1]<<" || "<<dp[i][j]<<" "<<dp[i][j-1]<<" "<<dp[i-1][j-1]<<endl;
            }
            else if(k[j-1]=='?'){
                dp[i][j]=dp[i-1][j-1];
            }
            else{
                dp[i][j]=0;
            }
        }
    }
}





/*

f(i,0,s.length()+1){
f(j,0,k.length()+1){
cout<<dp[i][j]<<"  ";
}cout<<endl;}
*/if(dp[s.length()][k.length()]){
    cout<<"MATCHED"<<endl;
}
else{
    cout<<"NOT MATCHED"<<endl;
}

}




